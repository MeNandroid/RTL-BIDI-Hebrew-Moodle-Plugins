<?php// Poscast - view.php, 24/02/2007/** * Mise � jour de la strucutre SQL */    require_once("../../config.php");    require_once("lib.php");    $id = optional_param('id', 0, PARAM_INT); // Course Module ID, or    $a  = optional_param('a', 0, PARAM_INT);  // podcast ID	$tab  = optional_param('tab', 'view', PARAM_ALPHA);  // action	// Width et Height par defaut des videos	if (!isset($CFG->podcast_width))		$CFG->podcast_width = 480;	if (!isset($CFG->podcast_height))		$CFG->podcast_height = 340;    if ($id) {        if (! $cm = get_record("course_modules", "id", $id)) {            error("Course Module ID was incorrect");        }        if (! $course = get_record("course", "id", $cm->course)) {            error("Course is misconfigured");        }        if (! $podcast = get_record("podcast", "id", $cm->instance)) {            error("Course module is incorrect");        }    } else {        if (! $podcast = get_record("podcast", "id", $a)) {            error("Course module is incorrect");        }        if (! $course = get_record("course", "id", $podcast->course)) {            error("Course is misconfigured");        }        if (! $cm = get_coursemodule_from_instance("podcast", $podcast->id, $course->id)) {            error("Course Module ID was incorrect");        }    }	if (isset($SESSION->modform)) {   // Variables are stored in the session        $form = $SESSION->modform;        unset($SESSION->modform);    } else {        $form = (object)$_POST;    }    require_login($course->id);    add_to_log($course->id, "podcast", "view", "view.php?id=$cm->id", "$podcast->id");/// Print the page header    if ($course->category) {        $navigation = "<a href=\"../../course/view.php?id=$course->id\">$course->shortname</a> ->";    } else {        $navigation = '';    }    $strpodcasts = get_string("modulenameplural", "podcast");    $strpodcast  = get_string("modulename", "podcast");    print_header("$course->shortname: $podcast->name", "$course->fullname",                 "$navigation <a href=index.php?id=$course->id>$strpodcasts</a> -> $podcast->name",                  "", "", true, update_module_button($cm->id, $course->id, $strpodcast),                  navmenu($course, $cm));/// Print the main part of the page	// Create Item	if ($form->action == "create" ) { //&& isteacheredit($course->id)) {		// Creation de l'item		$podcast_item->id = 0;		$podcast_item->id_podcast = $form->id_podcast;		$podcast_item->title =  $form->title;		$podcast_item->lien =  $form->lien;		$podcast_item->intro = $form->intro;		$podcast_item->pubdate = $form->pubdate;		$podcast_item->date_html = $form->date_html;		$podcast_item->duration = $form->duration;		$podcast_item->length = $form->length;		// Verification et insertion dans la base		$erreur = 0;		if (!check_podcast_extension($podcast_item->lien))			$erreur = 1;		if (trim($podcast_item->title) == "")			$erreur = 2;		switch($erreur) {			case 0:				if(insert_record("podcast_structure", addslashes_object($podcast_item))) {					unset($form);					$tab = "view";					echo "<p style='color:green;text-align:center;margin:0;font-size:0.8em;font-weight:bold;'>".get_string('add_ok','podcast')."</p>";					// XML					if (make_xml_podcast($podcast))						echo "<p style='color:green;text-align:center;margin:0;font-size:0.8em;font-weight:bold;'>".get_string('xml_ok','podcast')."</p>";					else						echo "<p style='color:red;text-align:center;margin:0;font-size:0.8em;font-weight:bold;'>".get_string('xml_error','podcast')."</p>";				} else {					$tab = "add";					echo "<p style='color:red;text-align:center;margin:0;font-size:0.8em;font-weight:bold;'>".get_string('errordb','podcast')."</p>";				}			break;			case 1:				$tab = "add";				echo "<p style='color:red;text-align:center;font-size:0.8em;font-weight:bold;'>".get_string('badextension','podcast');				echo " ".implode(", ",get_podcast_limit_mimetypes())."</p>";			break;			case 2:				$tab = "add";				echo "<p style='color:red;text-align:center;font-size:0.8em;font-weight:bold;'>".get_string('title_empty','podcast')."</p>";			break;			default;		}	}	// Update Item	if ($form->action == "update" ) { //&& isteacheredit($course->id)) {		// Creation de l'item		$podcast_item->id = $form->id_item;		$podcast_item->id_podcast = $form->id_podcast;		$podcast_item->title =  $form->title;		$podcast_item->lien = $form->lien;		$podcast_item->intro = $form->intro;		$podcast_item->pubdate = $form->pubdate;		$podcast_item->date_html = $form->date_html;		$podcast_item->duration = $form->duration;		$podcast_item->length = $form->length;		// V�rification et insertion dans la base		$erreur = 0;		if (!check_podcast_extension($podcast_item->lien))			$erreur = 1;		if (trim($podcast_item->title) == "")			$erreur = 2;		switch($erreur) {			case 0:				if(update_record("podcast_structure", addslashes_object($podcast_item))) {					unset($form);					$tab = "view";					echo "<p style='color:green;text-align:center;margin:0;font-size:0.8em;font-weight:bold;'>".get_string('update_ok','podcast')."</p>";					// XML					if (make_xml_podcast($podcast))						echo "<p style='color:green;text-align:center;margin:0;font-size:0.8em;font-weight:bold;'>".get_string('xml_ok','podcast')."</p>";					else						echo "<p style='color:red;text-align:center;margin:0;font-size:0.8em;font-weight:bold;'>".get_string('xml_error','podcast')."</p>";				} else {					$tab = "add";					echo "<p style='color:red;text-align:center;margin:0;font-size:0.8em;font-weight:bold;'>".get_string('errordb','podcast')."</p>";				}			break;			case 1:				$tab = "add";				echo "<p style='color:red;text-align:center;font-size:0.8em;font-weight:bold;'>".get_string('badextension','podcast');				echo " ".implode(", ",get_podcast_limit_mimetypes())."</p>";			break;			case 2:				$tab = "add";				echo "<p style='color:red;text-align:center;font-size:0.8em;font-weight:bold;'>".get_string('title_empty','podcast')."</p>";			break;			default;		}	}	// Delete Item	$action = optional_param('action', "view", PARAM_ALPHA);	if ($action == "delete" && isteacheredit($course->id)) {		$id_item = optional_param('id_item', 0, PARAM_INT);		if(!delete_records_select("podcast_structure", "id = ".$id_item)) {			error("Could not delete item podcast");		} else {			echo "<p style='color:green;text-align:center;font-size:0.8em;font-weight:bold;'>".get_string('del_ok','podcast')."</p>";			unset($form);			// XML			if (make_xml_podcast($podcast))				echo "<p style='color:green;text-align:center;font-size:0.8em;font-weight:bold;'>".get_string('xml_ok','podcast')."</p>";			else				echo "<p style='color:red;text-align:center;font-size:0.8em;font-weight:bold;'>".get_string('xml_error','podcast')."</p>";		}		if (! get_records("podcast_structure", "id_podcast", $podcast->id))			$tab = "view";	}	// Print Tabs for Teacher    //if (isteacheredit($course->id)) {		$tabs = array();	    $row  = array();		$row[] = new tabobject('view', "view.php?id=$cm->id&amp;tab=view", get_string('view', 'podcast')." ".get_string('modulename', 'podcast'));		if (get_records("podcast_structure", "id_podcast", $podcast->id))		    $row[] = new tabobject('view', "view.php?id=$cm->id&amp;tab=edit", get_string('edit', 'podcast'));		$row[] = new tabobject('edit', "view.php?id=$cm->id&amp;tab=add", get_string('add', 'podcast'));		$tabs[] = $row;	    print_tabs($tabs, $currenttab);	//}	if (isset($tab) && $tab == "add" ) { //&& isteacheredit($course->id)) {		podcast_add_item($podcast, $id);	}	if (isset($tab) && $tab == "edit" ) { //&& isteacheredit($course->id)) {		get_item_podcast($podcast, $id);	}	//if ((isteacheredit($course->id) && $tab == "view") || !isteacheredit($course->id)) {	if ($tab == "view") {		get_podcast($podcast);	}	/// Finish the page    print_footer($course);?>